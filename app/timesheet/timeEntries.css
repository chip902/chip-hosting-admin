/* Base time entry styles */
.time-entry {
  position: absolute !important;
  display: flex;
  flex-direction: column;
  box-sizing: border-box;
  transition: all 0.15s ease-out;
  overflow: hidden;
  z-index: 1;
  will-change: transform, width, left, top, height;
  backface-visibility: hidden;
  transform: translateZ(0);
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
  border-left: 2px solid rgba(255, 255, 255, 0.5);
  cursor: grab;
}

/* Show visual feedback for draggable area */
.time-entry:not(.dragging):hover {
  cursor: grab;
}

.time-entry.dragging {
  cursor: grabbing;
}

/* Overlapping entries */
.time-entry.overlapping {
  z-index: 2;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);
  border-left: 2px solid rgba(255, 255, 255, 0.7);
}

/* Short entries */
.time-entry.short {
  min-height: 40px;
  z-index: 3;
}

/* Dragging state */
.time-entry.dragging {
  z-index: 90 !important;
  opacity: 0.9;
  transform: scale(1.02) rotate(1deg);
  box-shadow: 0 8px 24px rgba(0, 0, 0, 0.3);
  transition: none;
  cursor: grabbing;
}

/* Hover state */
.time-entry:hover {
  z-index: 35 !important;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.25);
}

/* Ensure proper stacking for overlapping short entries */
.time-entry.overlapping.short {
  z-index: 4;
}

/* Entry content container */
.time-entry > div {
  display: flex;
  flex-direction: column;
  height: 100%;
  width: 100%;
  min-width: 0;
  padding: 4px 6px;
  box-sizing: border-box;
}

/* Text handling */
.time-entry span,
.time-entry div {
  display: block;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  line-height: 1.2;
}

/* Resize handles - only visible on hover */
.resize-handle,
.top-resize-handle {
  position: absolute;
  left: 0;
  right: 0;
  height: 8px;
  cursor: ns-resize;
  background-color: transparent;
  z-index: 2;
  opacity: 0;
  transition: opacity 0.2s ease;
  pointer-events: none;
}

.resize-handle {
  bottom: 0;
}

.top-resize-handle {
  top: 0;
}

/* Show resize handles only when hovering over the time entry */
.time-entry:hover .resize-handle,
.time-entry:hover .top-resize-handle {
  opacity: 1;
  pointer-events: auto;
}

.resize-handle:hover,
.resize-handle:active,
.top-resize-handle:hover,
.top-resize-handle:active {
  background-color: rgba(255, 255, 255, 0.4);
  opacity: 1;
}

/* Removed margin that interfered with positioning calculations */

/* Improve text contrast and readability */
.time-entry {
  color: white;
  text-shadow: 0 1px 1px rgba(0, 0, 0, 0.3);
}

/* Main entry styling */
.time-entry.main-entry {
  z-index: 15;
  border-left: 3px solid rgba(255, 255, 255, 0.6);
}

/* Stacked entry styling */
.time-entry.stacked-entry {
  z-index: 12;
  opacity: 0.9;
  border-left: 2px solid rgba(255, 255, 255, 0.4);
  font-size: smaller;
  border-radius: 0.25rem;
  position: relative;
}

/* Add visual stacking effect */
.time-entry.stacked-entry::before {
  content: '';
  position: absolute;
  top: -1px;
  left: -1px;
  right: -1px;
  bottom: -1px;
  background: rgba(255, 255, 255, 0.1);
  border-radius: 0.25rem;
  z-index: -1;
}

.time-entry.stacked-entry:hover {
  z-index: 45 !important;
  opacity: 1;
  transform: scale(1.05);
  box-shadow: 0 4px 16px rgba(0, 0, 0, 0.3);
}

/* Dense stacked entries (4+) */
.time-entry.dense-stacked.stacked-entry {
  opacity: 0.8;
  border-radius: 0.25rem;
  padding: 2px 4px;
  min-height: 20px;
}

.time-entry.dense-stacked.stacked-entry:hover {
  opacity: 1;
  transform: scale(1.1);
  z-index: 48 !important;
}

/* Compact content for stacked entries */
.time-entry.stacked-entry .text-xs {
  font-size: 10px;
  line-height: 1.1;
}

.time-entry.dense-stacked .text-xs {
  font-size: 9px;
  line-height: 1;
}

/* Animation for entry updates */
@keyframes highlight-update {
  0% { transform: scale(1); }
  50% { transform: scale(1.02); }
  100% { transform: scale(1); }
}

.time-entry.updated {
  animation: highlight-update 0.3s ease-out;
}
